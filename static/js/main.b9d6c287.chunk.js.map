{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justifyContent","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","gutterBottom","start","end","value","duration","separator","url","fetchData","country","a","changeableUrl","axios","get","lastupdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9d6c287.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1043F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1cT6P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1f1Jh\",\"card\":\"Cards_card__3kyDC\",\"infected\":\"Cards_infected__2NzNZ\",\"recovered\":\"Cards_recovered__1cdGG\",\"deaths\":\"Cards_deaths__1Cq_j\"};","import React from 'react';\r\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport Countup from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return \"Loading..\";\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justifyContent=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <Countup start={0} end={confirmed.value} duration={2} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">Updated recently</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>Recoverd</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <Countup start={0} end={recovered.value} duration={2} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">Updated recently</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries cases from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" variant=\"h5\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <Countup start={0} end={deaths.value} duration={2} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">Updated recently</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if (country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastupdate } } = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastupdate };\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n    const [dailyData, setDailyData] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, []);\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: '#3333ff',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            backgroundColor: 'rgba(255,0,0,0.5)',\r\n                            fill: true,\r\n                        }],\r\n                    }}\r\n                />) : null\r\n    );\r\n    console.log(confirmed, recovered, deaths);\r\n    const barChart = (\r\n        confirmed\r\n            ? (\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Infected', 'Recovered', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: ['rgb(0,0,255,0.5)', 'rgb(0,255,0,0.5)', 'rgb(255,0,0,0.5)',],\r\n                            data: [confirmed.value, recovered.value, deaths.value]\r\n                        }]\r\n                    }}\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `Current state in ${country}` }\r\n                    }}\r\n                />\r\n            ) : null\r\n    )\r\n\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => { handleCountryChange(e.target.value) }}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api/index';\r\nimport coronaImage from './images/image.png'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({ data: fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"covid-19\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Q_ez\",\"image\":\"App_image__2ETyf\"};"],"sourceRoot":""}